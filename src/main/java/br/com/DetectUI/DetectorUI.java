/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.DetectUI;

import br.com.AndroidDetector.AndroidLayoutSmells;
import br.com.AndroidDetector.LoadFiles;
import br.com.AndroidDetector.AndroidJavaCodeSmells;

import java.io.File;
import java.io.FileWriter;
import java.io.OutputStream;
import java.io.PrintStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import static br.com.UTIL.Constants.*;

/**
 * @author julio
 */
public class DetectorUI extends javax.swing.JFrame {

    /**
     * Creates new form DetectorUI
     */
    public DetectorUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jBtnRunAnalise = new javax.swing.JButton();
        txtCaminhoApp = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTxtOutput = new javax.swing.JTextArea();
        jCheckCoupledUI = new javax.swing.JCheckBox();
        jCheckSuspiciousBehavior = new javax.swing.JCheckBox();
        jCheckFlexAdapter = new javax.swing.JCheckBox();
        jCheckGodStyleResource = new javax.swing.JCheckBox();
        jCheckDeepNestedLayout = new javax.swing.JCheckBox();
        jCheckDuplicateStyle = new javax.swing.JCheckBox();
        jCheckBrainUIComponent = new javax.swing.JCheckBox();
        jCheckHideListener = new javax.swing.JCheckBox();
        jCheckMagicResource = new javax.swing.JCheckBox();
        jCheckBadStringResource = new javax.swing.JCheckBox();
        jCheckReusodeString = new javax.swing.JCheckBox();
        jCheckNotFoundImage = new javax.swing.JCheckBox();
        jCheckCompUIIO = new javax.swing.JCheckBox();
        jCheckNotFragment = new javax.swing.JCheckBox();
        jCheckExcessiveUseFragments = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txtOutput = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBtnRunAnalise.setText("Analisar");
        jBtnRunAnalise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRunAnaliseActionPerformed(evt);
            }
        });

        jLabel1.setText("Apps:");

        jTxtOutput.setColumns(20);
        jTxtOutput.setRows(5);
        jScrollPane1.setViewportView(jTxtOutput);

        jCheckCoupledUI.setText("Coupled UI Component");

        jCheckSuspiciousBehavior.setText("Suspicious Behavior");

        jCheckFlexAdapter.setText("Flex Adapter");

        jCheckGodStyleResource.setText("God Style Resource");

        jCheckDeepNestedLayout.setText("Deep Nested Layout");

        jCheckDuplicateStyle.setText("Duplicate Style Attributes");

        jCheckBrainUIComponent.setText("Brain UI Component");

        jCheckHideListener.setText("Hide Listener");

        jCheckMagicResource.setText("Magic Resource");

        jCheckBadStringResource.setText("Bad String Resource");

        jCheckReusodeString.setText("Reuso de String");

        jCheckNotFoundImage.setText("Not Found Image");

        jCheckCompUIIO.setText("Comp. UI IO");

        jCheckNotFragment.setText("Not Fragments");

        jCheckExcessiveUseFragments.setText("Excessive Fragments");

        jLabel2.setText("Output:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCaminhoApp)
                                        .addComponent(txtOutput))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnRunAnalise)
                                .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckSuspiciousBehavior)
                                        .addComponent(jCheckFlexAdapter)
                                        .addComponent(jCheckCoupledUI))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckGodStyleResource)
                                        .addComponent(jCheckDeepNestedLayout)
                                        .addComponent(jCheckDuplicateStyle))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBrainUIComponent)
                                        .addComponent(jCheckHideListener)
                                        .addComponent(jCheckMagicResource))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckBadStringResource)
                                        .addComponent(jCheckReusodeString)
                                        .addComponent(jCheckNotFoundImage))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jCheckNotFragment)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jCheckCompUIIO)
                                                        .addComponent(jCheckExcessiveUseFragments))
                                                .addGap(0, 35, Short.MAX_VALUE)))
                                .addGap(48, 48, 48))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(77, 77, 77)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(txtCaminhoApp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel1)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jBtnRunAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jCheckCoupledUI)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCheckSuspiciousBehavior)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jCheckFlexAdapter))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jCheckGodStyleResource)
                                                        .addComponent(jCheckBrainUIComponent))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jCheckDeepNestedLayout)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jCheckDuplicateStyle))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jCheckHideListener)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jCheckMagicResource))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jCheckBadStringResource)
                                                        .addComponent(jCheckCompUIIO))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jCheckReusodeString)
                                                        .addComponent(jCheckNotFragment))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jCheckNotFoundImage)
                                                        .addComponent(jCheckExcessiveUseFragments))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jBtnRunAnaliseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRunAnaliseActionPerformed
        try {
            PrintStream ps = new PrintStream(
                    new OutputStream() {
                        public void write(int c) {
                            jTxtOutput.setText(jTxtOutput.getText() + (char) c);
                        }
                    }
            );

            System.setOut(ps);

            if (txtCaminhoApp.getText() != "") {
                long inicio = System.currentTimeMillis();
                System.out.println(new SimpleDateFormat("HH:mm:ss").format(new Date(inicio)));

                File fileCsv = new File(txtOutput.getText());

                // creates the file
                fileCsv.createNewFile();
                FileWriter writer = new FileWriter(fileCsv);
                writer.append("Aplicativo" + ";" + "DeepNestedLayout" + ";" + "DuplicateStyleAttributes" + ";" + "GodStyleResource" + ";" + "HiddenListener" + ";" + "magicResource" + ";" + "godStringResource" + ";" + "inappropriateStringReuse" + ";" + "NotFoundImage" + ";" + "CoupledUIComponent" + ";" + "SuspiciousBehavior" + ";" + "FlexAdapter" + ";" + "BrainUIComponent" + ";" + "CompUIIO" + ";" + "NotFragment" + ";" + "ExcessiveFragment");
                writer.append("\n");


                File file = new File(PATH_SAVE_OUTPUT);
                File afile[] = file.listFiles();

                for (int j = 0; j < afile.length; j++) {
                    if(jCheckCoupledUI.isSelected()){
                        AndroidJavaCodeSmells.CoupledUIComponent(txtCaminhoApp.getText());
                    }

                    if(jCheckSuspiciousBehavior.isSelected()){
                        AndroidJavaCodeSmells.SuspiciousBehavior(txtCaminhoApp.getText());
                    }

                    if(jCheckFlexAdapter.isSelected()){
                        AndroidJavaCodeSmells.FlexAdapter(txtCaminhoApp.getText());
                    }

                    if(jCheckGodStyleResource.isSelected()){
                        AndroidLayoutSmells.GodStyleResource(txtCaminhoApp.getText(),THRESHOLD_GODSTYLERESOURCE);
                    }

                    if(jCheckDeepNestedLayout.isSelected()){
                        AndroidLayoutSmells.DeepNestedLayout(txtCaminhoApp.getText(),THRESHOLD_DEEPNESTEDLAYOUT);
                    }

                    if(jCheckDuplicateStyle.isSelected()){
                        AndroidLayoutSmells.DuplicateStyleAttributes(txtCaminhoApp.getText());
                    }

                    if(jCheckBrainUIComponent.isSelected()){
                        AndroidJavaCodeSmells.BrainUIComponent(txtCaminhoApp.getText());
                    }

                    if(jCheckHideListener.isSelected()){
                        AndroidLayoutSmells.HiddenListener(txtCaminhoApp.getText());
                    }

                    if(jCheckMagicResource.isSelected()){
                        AndroidLayoutSmells.magicResource(txtCaminhoApp.getText());
                    }

                    if(jCheckBadStringResource.isSelected()){
                        AndroidLayoutSmells.godStringResource(txtCaminhoApp.getText());
                    }

                    if(jCheckReusodeString.isSelected()){
                        AndroidLayoutSmells.inappropriateStringReuse(txtCaminhoApp.getText());
                    }

                    if(jCheckNotFoundImage.isSelected()){
                        AndroidLayoutSmells.NotFoundImage(txtCaminhoApp.getText());
                    }

                    if(jCheckCompUIIO.isSelected()){
                        AndroidJavaCodeSmells.CompUIIO(txtCaminhoApp.getText());
                    }

                    if(jCheckNotFragment.isSelected()){
                        AndroidJavaCodeSmells.NotFragment(txtCaminhoApp.getText());
                    }

                    if(jCheckExcessiveUseFragments.isSelected()){
                        AndroidJavaCodeSmells.ExcessiveFragment(txtCaminhoApp.getText(), THRESHOLD_EXCESSIVEFRAGMENT);
                    }


                    File f = new File(afile[j].toString());
                    LoadFiles.carregaArquivosXMLAnalise(f);


                    System.out.println();
                    System.out.println();
                    System.out.println(f.getName() + " - " + j);
                    System.out.println();
                    System.out.println();
                    String caminho = afile[j].toString();


                    String app = f.getName();
                    long totalDeepNested = AndroidLayoutSmells.DeepNestedLayout(caminho, THRESHOLD_DEEPNESTEDLAYOUT).size();
                    long totalDuplicateStyleAttributes = AndroidLayoutSmells.DuplicateStyleAttributes(caminho).size();
                    long totalGodStyleResource = AndroidLayoutSmells.GodStyleResource(caminho, THRESHOLD_GODSTYLERESOURCE).size();
                    long totalHideListener = AndroidLayoutSmells.HiddenListener(caminho).size();
                    long totalmagicResource = AndroidLayoutSmells.magicResource(caminho).size();
                    long totalBadStringResource = AndroidLayoutSmells.godStringResource(caminho).size();
                    long totalreusoInadequadoDeString = AndroidLayoutSmells.inappropriateStringReuse(caminho).size();
                    long totalNotFoundImage = AndroidLayoutSmells.NotFoundImage(caminho).size();

                    //análises de código java
                    LoadFiles.carregaArquivosJAVAAnalise(f);

                    long totalCoupledUIComponent = AndroidJavaCodeSmells.CoupledUIComponent(caminho).size();
                    long totalSuspiciousBehavior = AndroidJavaCodeSmells.SuspiciousBehavior(caminho).size();
                    long totalFlexAdapter = AndroidJavaCodeSmells.FlexAdapter(caminho).size();
                    long totalBrainUIComponent = AndroidJavaCodeSmells.BrainUIComponent(caminho).size();
                    long totalCompUIIO = AndroidJavaCodeSmells.CompUIIO(caminho).size();
                    long totalNotFragment = AndroidJavaCodeSmells.NotFragment(caminho).size();
                    long totalExcessiveFragment = AndroidJavaCodeSmells.ExcessiveFragment(caminho, THRESHOLD_EXCESSIVEFRAGMENT).size();

                    writer.append(
                            app + ";" +
                                    totalDeepNested + ";" +
                                    totalDuplicateStyleAttributes + ";" +
                                    totalGodStyleResource + ";" +
                                    totalHideListener + ";" +
                                    totalmagicResource + ";" +
                                    totalBadStringResource + ";" +
                                    totalreusoInadequadoDeString + ";" +
                                    totalNotFoundImage + ";" +
                                    totalCoupledUIComponent + ";" +
                                    totalSuspiciousBehavior + ";" +
                                    totalFlexAdapter + ";" +
                                    totalBrainUIComponent + ";" +
                                    totalCompUIIO + ";" +
                                    totalNotFragment + ";" +
                                    totalExcessiveFragment + ";"
                    );
                    writer.append("\n");
                }

                writer.flush();
                writer.close();

                long fim = System.currentTimeMillis();
                System.out.println(new SimpleDateFormat("HH:mm:ss").format(new Date(inicio - fim)));

                JOptionPane.showMessageDialog(rootPane, "Análise Concluída resultados salvos em: " + txtOutput.getText());
            } else {
                JOptionPane.showMessageDialog(rootPane, "Informe Aplicativo para a análise");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } finally {

        }
    }//GEN-LAST:event_jBtnRunAnaliseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetectorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetectorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetectorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetectorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetectorUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jBtnRunAnalise;
    private javax.swing.JCheckBox jCheckBadStringResource;
    private javax.swing.JCheckBox jCheckBrainUIComponent;
    private javax.swing.JCheckBox jCheckCompUIIO;
    private javax.swing.JCheckBox jCheckCoupledUI;
    private javax.swing.JCheckBox jCheckDeepNestedLayout;
    private javax.swing.JCheckBox jCheckDuplicateStyle;
    private javax.swing.JCheckBox jCheckExcessiveUseFragments;
    private javax.swing.JCheckBox jCheckFlexAdapter;
    private javax.swing.JCheckBox jCheckGodStyleResource;
    private javax.swing.JCheckBox jCheckHideListener;
    private javax.swing.JCheckBox jCheckMagicResource;
    private javax.swing.JCheckBox jCheckNotFoundImage;
    private javax.swing.JCheckBox jCheckNotFragment;
    private javax.swing.JCheckBox jCheckReusodeString;
    private javax.swing.JCheckBox jCheckSuspiciousBehavior;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTxtOutput;
    private javax.swing.JTextField txtCaminhoApp;
    private javax.swing.JTextField txtOutput;
    // End of variables declaration//GEN-END:variables
}
